build:
  context: .
  dockerfile: Dockerfile

deploy:
  startCommand: >
    sh -c "
      echo '🔄 Starting deployment...' &&
      python manage.py collectstatic --noinput || true &&
      python manage.py makemigrations --noinput || true &&
      python manage.py migrate --noinput || true &&
      python manage.py migrate --run-syncdb || true &&
      python -c \"
import os, django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()
from authentication.models import UserAuth
from django.contrib.auth.hashers import make_password
admin_email = 'admin@sportmap.com'
try:
    if not UserAuth.objects.filter(email=admin_email).exists():
        UserAuth.objects.create(
            email=admin_email,
            password=make_password('AdminSportMap2025!'),
            is_verified=True,
            is_admin=True
        )
        print(f'✅ Admin created: {admin_email}')
    else:
        admin = UserAuth.objects.get(email=admin_email)
        admin.is_admin = True
        admin.save()
        print(f'✅ Admin updated: {admin_email}')
except Exception as e:
    print(f'❌ Admin setup error: {e}')
      \" &&
      python manage.py load_csv data/filtered-data-es.csv --force || echo 'Data load skipped' &&
      echo '🚀 Starting server...' &&
      gunicorn config.wsgi:application --bind 0.0.0.0:\$PORT --workers 2 --timeout 120
    "
  healthcheckPath: /health/
  healthcheckTimeout: 60
  restartPolicyType: always

